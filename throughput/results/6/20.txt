BEGIN;
BEGIN
EXPLAIN (ANALYZE, BUFFERS)
select
	s_name,
	s_address
from
	supplier,
	nation
where
	s_suppkey in (
		select
			distinct (ps_suppkey)
		from
			partsupp,
			part
		where
			ps_partkey=p_partkey
			and p_name like 'tomato%'
			and ps_availqty > (
				select
					0.5 * sum(l_quantity)
				from
					lineitem
				where
					l_partkey = ps_partkey
					and l_suppkey = ps_suppkey
					and l_shipdate >= '1994-01-01'
					and l_shipdate < cast(date '1994-01-01' + interval '1 year' as date)
			)
	)
	and s_nationkey = n_nationkey
	and n_name = 'INDIA'
order by
	s_name;
                                                                                                  QUERY PLAN                                                                                                   
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=12740183.38..12740186.31 rows=1174 width=51) (actual time=10279.187..10279.387 rows=1838 loops=1)
   Sort Key: supplier.s_name
   Sort Method: quicksort  Memory: 261kB
   Buffers: shared hit=2815230 read=318604 dirtied=6112
   ->  Nested Loop  (cost=12735713.87..12740123.52 rows=1174 width=51) (actual time=10084.792..10262.419 rows=1838 loops=1)
         Join Filter: (supplier.s_nationkey = nation.n_nationkey)
         Rows Removed by Join Filter: 43244
         Buffers: shared hit=2815225 read=318604 dirtied=6112
         ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.017..0.033 rows=1 loops=1)
               Filter: (n_name = 'INDIA'::bpchar)
               Rows Removed by Filter: 24
               Buffers: shared hit=1
         ->  Hash Semi Join  (cost=12735713.87..12739755.20 rows=29361 width=55) (actual time=10084.738..10252.969 rows=45082 loops=1)
               Hash Cond: (supplier.s_suppkey = partsupp.ps_suppkey)
               Buffers: shared hit=2815224 read=318604 dirtied=6112
               ->  Seq Scan on supplier  (cost=0.00..3179.00 rows=100000 width=59) (actual time=0.036..57.213 rows=100000 loops=1)
                     Buffers: shared hit=23 read=2156
               ->  Hash  (cost=12735346.86..12735346.86 rows=29361 width=4) (actual time=10084.647..10084.647 rows=45082 loops=1)
                     Buckets: 4096  Batches: 1  Memory Usage: 1585kB
                     Buffers: shared hit=2815201 read=316448 dirtied=6112
                     ->  HashAggregate  (cost=12734759.64..12735053.25 rows=29361 width=4) (actual time=10038.973..10067.253 rows=45082 loops=1)
                           Buffers: shared hit=2815201 read=316448 dirtied=6112
                           ->  Nested Loop  (cost=0.00..12734686.23 rows=29361 width=4) (actual time=1.046..9950.095 rows=59628 loops=1)
                                 Buffers: shared hit=2815201 read=316448 dirtied=6112
                                 ->  Seq Scan on part  (cost=0.00..65522.00 rows=22021 width=4) (actual time=0.074..747.243 rows=21921 loops=1)
                                       Filter: ((p_name)::text ~~ 'tomato%'::text)
                                       Rows Removed by Filter: 1978079
                                       Buffers: shared hit=31155 read=9367
                                 ->  Index Scan using pk_partsupp on partsupp  (cost=0.00..575.31 rows=1 width=8) (actual time=0.341..0.418 rows=3 loops=21921)
                                       Index Cond: (ps_partkey = part.p_partkey)
                                       Filter: ((ps_availqty)::double precision > (SubPlan 1))
                                       Rows Removed by Filter: 1
                                       Buffers: shared hit=2784046 read=307081 dirtied=6112
                                       SubPlan 1
                                         ->  Aggregate  (cost=140.92..140.94 rows=1 width=4) (actual time=0.096..0.096 rows=1 loops=87684)
                                               Buffers: shared hit=2725787 read=274737 dirtied=6112
                                               ->  Index Scan using lineitem_l_partkey_l_quantity_l_shipmode_idx on lineitem  (cost=0.00..140.92 rows=1 width=4) (actual time=0.059..0.094 rows=1 loops=87684)
                                                     Index Cond: (l_partkey = partsupp.ps_partkey)
                                                     Filter: ((l_shipdate >= '1994-01-01'::date) AND (l_shipdate < '1995-01-01'::date) AND (l_suppkey = partsupp.ps_suppkey))
                                                     Rows Removed by Filter: 29
                                                     Buffers: shared hit=2725787 read=274737 dirtied=6112
 Total runtime: 10281.774 ms
(42 rows)

COMMIT;
COMMIT
